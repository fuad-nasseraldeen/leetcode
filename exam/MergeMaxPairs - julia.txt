# Max pairs
Given Two arrays, a and b , find the maximum number between a[i] and b[i] and return an array, which include the maximum by the same order.
For Example: a = [1,5,6,8], b =[3,3,3,9] , the method should return [3,5,6,9] 
Explanation: (1,3) = 3 \\ (5,3) = 5 \\ (6,3) = 6 \\ (8,9) = 9 
Attention: in some cases, if an array is shorter than the second one, assume that the smallest is containing zeros.
For example : a = [1,6,9] , b = [2,1]
The method should return [2, 6, 9], we assumed that 9 is compared to 0, since b[3] is not existed.

####################################################
function max_pair(a, b)
    na, nb = length(a), length(b)
    na == nb && return max.(a, b)

    # make sure a is the longer one
    if nb > na
        a, b = b, a
        na, nb = nb, na
    end
    # compare the comparable
    maxes = max.(a[1:nb], b)
    # append the rest
    append!(maxes, a[nb+1:end])
    return maxes
end
a = [1,5,880,9999,5,3,2,5,6,3]
b = [3,2,9,99999,456,234,234,234,234,234,234345,6,1234]
println(max_pair(a,b))
######################by ME ####################################

function MaxPair(a,b)
    na, nb = length(a), length(b)
    # make sure a is the longer one
    if nb > na
        a, b = b, a
        na, nb = nb, na
    end
    res = Array{Int64}(undef,na)
    i=1
    while i<=nb
        if a[i] >= b[i]
            res[i] = a[i]
            i+=1
        else
            res[i] = b[i]
            i +=1
        end
    end
        while nb+1<=length(a)
            res[nb+1] = a[nb+1]
            nb+=1
        end
    return res
end
a = [1,5,880,99,3254,3245,3254,345,3245,324599]
b = [3,2,9,9999,2345,324,3,4,34,3254,2345,23244,4,234,2435,9]
println(MaxPair(a,b))



