
https://www.hackerrank.com/challenges/richie-rich/problem?h_r=next-challenge&h_v=zen&isFullScreen=false&h_r=next-challenge&h_v=zen



static String highestValuePalindrome(String s, int n, int k) {
       char[] chars = s.toCharArray();
       boolean[] changed = new boolean[n];
       int count = 0;
       for (int i = 0; i < n / 2; i++) {
           if (chars[i] < chars[n - i - 1]) {
               chars[i] = chars[n - i - 1];
               count++;
               changed[i] = true;
           } else if (chars[i] > chars[n - i - 1]) {
               chars[n - i - 1] = chars[i];
               count++;
               changed[i] = true;
           }
       }
       if (count > k) {
           return "-1";
       } else if (count < k) {
           for (int i = 0; i < n / 2; i++) {
               if (chars[i] != '9') {
                   if (k - count >= 1 && changed[i]) {
                       chars[i] = chars[n - i - 1] = '9';
                       count++;
                   } else if (k - count >= 2 && !changed[i]) {
                       chars[i] = chars[n - i - 1] = '9';
                       count += 2;
                   }
               }
           }           
       }
       if (count < k && n % 2 == 1) {
           chars[n / 2] = '9';
       }
       return s.valueOf(chars);
   }

